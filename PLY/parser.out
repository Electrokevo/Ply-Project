Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHARACTER
    DIVIDE_EQUAL
    DO
    FILE
    FOR
    MINUS_EQUAL
    MODULE
    MODULE_EQUAL
    NEW
    NINT
    NUINT
    PLUS_EQUAL
    STRING
    THEN
    TIMES_EQUAL
    ULONG
    USHORT
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> usings namespace class
Rule 2     program -> namespace class
Rule 3     usings -> using usings
Rule 4     usings -> using
Rule 5     using -> USING CLASSOBJECT SEMICOLON
Rule 6     namespace -> NAMESPACE CLASSOBJECT SEMICOLON
Rule 7     class -> modifier CLASS CLASSOBJECT block
Rule 8     class -> modifier STATIC CLASS CLASSOBJECT block
Rule 9     object_access -> ID DOT ID
Rule 10    object_access -> CLASSOBJECT DOT CLASSOBJECT
Rule 11    object_access -> ID DOT CLASSOBJECT
Rule 12    object_access -> CLASSOBJECT DOT ID
Rule 13    block -> LBRACKET body RBRACKET
Rule 14    body -> lines SEMICOLON
Rule 15    body -> lines SEMICOLON body
Rule 16    body -> function
Rule 17    lines -> assignment
Rule 18    lines -> expression
Rule 19    lines -> declaration
Rule 20    lines -> if
Rule 21    lines -> loop
Rule 22    lines -> return
Rule 23    function -> modifier data_type ID LPAREN declarations RPAREN block
Rule 24    function -> modifier VOID ID LPAREN declarations RPAREN block
Rule 25    function -> modifier STATIC data_type ID LPAREN declarations RPAREN block
Rule 26    function -> modifier STATIC VOID ID LPAREN declarations RPAREN block
Rule 27    return -> RETURN ID
Rule 28    return -> RETURN type
Rule 29    type -> FLOAT_TYPE
Rule 30    type -> DOUBLE_TYPE
Rule 31    type -> DECIMAL_TYPE
Rule 32    type -> INTEGER_TYPE
Rule 33    if -> IF LPAREN logical_expression RPAREN block
Rule 34    if -> IF LPAREN logical_expression RPAREN block elseif
Rule 35    if -> IF LPAREN logical_expression RPAREN block else
Rule 36    elseif -> ELSE IF LPAREN logical_expression RPAREN block
Rule 37    elseif -> ELSE IF LPAREN logical_expression RPAREN block elseif
Rule 38    elseif -> ELSE IF LPAREN logical_expression RPAREN block else
Rule 39    else -> ELSE block
Rule 40    loop -> while_loop
Rule 41    while_loop -> WHILE LPAREN logical_expression RPAREN block
Rule 42    logical_expression -> logical_expression logical_operator logical_factor
Rule 43    logical_expression -> logical_factor
Rule 44    logical_factor -> TRUE
Rule 45    logical_factor -> FALSE
Rule 46    logical_factor -> ID
Rule 47    logical_factor -> logical_expression
Rule 48    assignment -> ID EQUALS expression
Rule 49    assignment -> data_type ID EQUALS expression
Rule 50    assignment -> CLASSOBJECT ID
Rule 51    assignment -> ID EQUALS ID
Rule 52    declarations -> declaration
Rule 53    declarations -> declaration COMMA
Rule 54    declarations -> declaration COMMA declarations
Rule 55    declaration -> data_type ID
Rule 56    expression -> expression PLUS term
Rule 57    expression -> expression MINUS term
Rule 58    term -> term TIMES factor
Rule 59    term -> term DIVIDE factor
Rule 60    term -> factor
Rule 61    factor -> type
Rule 62    factor -> LPAREN expression RPAREN
Rule 63    factor -> term
Rule 64    factor -> object_access
Rule 65    factor -> ID
Rule 66    factor -> index
Rule 67    modifier -> PUBLIC
Rule 68    modifier -> PRIVATE
Rule 69    modifier -> PROTECTED
Rule 70    modifier -> INTERNAL
Rule 71    data_type -> primitive
Rule 72    data_type -> data_structure
Rule 73    primitive -> INT
Rule 74    primitive -> FLOAT
Rule 75    primitive -> BOOL
Rule 76    primitive -> BYTE
Rule 77    primitive -> CHAR
Rule 78    primitive -> SBYTE
Rule 79    primitive -> DECIMAL
Rule 80    primitive -> DOUBLE
Rule 81    primitive -> LONG
Rule 82    primitive -> SHORT
Rule 83    primitive -> UINT
Rule 84    data_structure -> array
Rule 85    array -> primitive LSQBRACKET RSQBRACKET
Rule 86    array -> CLASSOBJECT LSQBRACKET RSQBRACKET
Rule 87    index -> ID LSQBRACKET INTEGER_TYPE RSQBRACKET
Rule 88    index -> ID LSQBRACKET ID RSQBRACKET
Rule 89    logical_operator -> OR
Rule 90    logical_operator -> AND
Rule 91    logical_operator -> NOT
Rule 92    logical_operator -> GREATER_THAN
Rule 93    logical_operator -> LESS_THAN
Rule 94    logical_operator -> GREATER_EQUALS_THAN
Rule 95    logical_operator -> LESS_EQUALS_THAN

Terminals, with rules where they appear

AND                  : 90
BOOL                 : 75
BYTE                 : 76
CHAR                 : 77
CHARACTER            : 
CLASS                : 7 8
CLASSOBJECT          : 5 6 7 8 10 10 11 12 50 86
COMMA                : 53 54
DECIMAL              : 79
DECIMAL_TYPE         : 31
DIVIDE               : 59
DIVIDE_EQUAL         : 
DO                   : 
DOT                  : 9 10 11 12
DOUBLE               : 80
DOUBLE_TYPE          : 30
ELSE                 : 36 37 38 39
EQUALS               : 48 49 51
FALSE                : 45
FILE                 : 
FLOAT                : 74
FLOAT_TYPE           : 29
FOR                  : 
GREATER_EQUALS_THAN  : 94
GREATER_THAN         : 92
ID                   : 9 9 11 12 23 24 25 26 27 46 48 49 50 51 51 55 65 87 88 88
IF                   : 33 34 35 36 37 38
INT                  : 73
INTEGER_TYPE         : 32 87
INTERNAL             : 70
LBRACKET             : 13
LESS_EQUALS_THAN     : 95
LESS_THAN            : 93
LONG                 : 81
LPAREN               : 23 24 25 26 33 34 35 36 37 38 41 62
LSQBRACKET           : 85 86 87 88
MINUS                : 57
MINUS_EQUAL          : 
MODULE               : 
MODULE_EQUAL         : 
NAMESPACE            : 6
NEW                  : 
NINT                 : 
NOT                  : 91
NUINT                : 
OR                   : 89
PLUS                 : 56
PLUS_EQUAL           : 
PRIVATE              : 68
PROTECTED            : 69
PUBLIC               : 67
RBRACKET             : 13
RETURN               : 27 28
RPAREN               : 23 24 25 26 33 34 35 36 37 38 41 62
RSQBRACKET           : 85 86 87 88
SBYTE                : 78
SEMICOLON            : 5 6 14 15
SHORT                : 82
STATIC               : 8 25 26
STRING               : 
THEN                 : 
TIMES                : 58
TIMES_EQUAL          : 
TRUE                 : 44
UINT                 : 83
ULONG                : 
USHORT               : 
USING                : 5
VAR                  : 
VOID                 : 24 26
WHILE                : 41
error                : 

Nonterminals, with rules where they appear

array                : 84
assignment           : 17
block                : 7 8 23 24 25 26 33 34 35 36 37 38 39 41
body                 : 13 15
class                : 1 2
data_structure       : 72
data_type            : 23 25 49 55
declaration          : 19 52 53 54
declarations         : 23 24 25 26 54
else                 : 35 38
elseif               : 34 37
expression           : 18 48 49 56 57 62
factor               : 58 59 60
function             : 16
if                   : 20
index                : 66
lines                : 14 15
logical_expression   : 33 34 35 36 37 38 41 42 47
logical_factor       : 42 43
logical_operator     : 42
loop                 : 21
modifier             : 7 8 23 24 25 26
namespace            : 1 2
object_access        : 64
primitive            : 71 85
program              : 0
return               : 22
term                 : 56 57 58 59 63
type                 : 28 61
using                : 3 4
usings               : 1 3
while_loop           : 40

