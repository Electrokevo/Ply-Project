
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BYTE CHAR CHARACTER CLASS CLASSOBJECT COMMA DECIMAL DECIMAL_TYPE DIVIDE DIVIDE_EQUAL DO DOT DOUBLE DOUBLE_TYPE ELSE EQUALS FALSE FILE FLOAT FLOAT_TYPE FOR GREATER_EQUALS_THAN GREATER_THAN ID IF INT INTEGER_TYPE INTERNAL LBRACKET LESS_EQUALS_THAN LESS_THAN LONG LPAREN LSQBRACKET MINUS MINUS_EQUAL MODULE MODULE_EQUAL NEW NINT NOT NUINT OR PLUS PLUS_EQUAL PRIVATE PROTECTED PUBLIC RBRACKET RETURN RPAREN RSQBRACKET SBYTE SEMICOLON SHORT STRING THEN TIMES TIMES_EQUAL TRUE UINT ULONG USHORT USING VAR VOID WHILEprogram : usings classusings : usings\n    | usingusing : USING CLASSOBJECT SEMICOLONclass : modifier CLASS CLASSOBJECT blockblock : LBRACKET body RBRACKETbody : lines SEMICOLON\n            | lines SEMICOLON body\n            | functionlines : assignment \n    | expression \n    | declaration\n    | if\n    | loop\n    | returnfunction : modifier data_type ID LPAREN declaration RPAREN block\n                | modifier VOID ID LPAREN declaration RPAREN blockreturn : RETURN ID\n               | RETURN typetype : FLOAT_TYPE\n    | DOUBLE_TYPE\n    | DECIMAL_TYPE\n    | INTEGER_TYPEif : IF LPAREN logical_expression RPAREN block\n    | IF LPAREN logical_expression RPAREN block elseif\n    | IF LPAREN logical_expression RPAREN block elseelseif : ELSE IF LPAREN logical_expression RPAREN block\n    | ELSE IF LPAREN logical_expression RPAREN block elseif\n    | ELSE IF LPAREN logical_expression RPAREN block elseelse : ELSE blockloop : while_loopwhile_loop : WHILE LPAREN logical_expression RPAREN blocklogical_expression : logical_expression logical_operator logical_factor\n        | logical_factorlogical_factor : TRUE\n    | FALSE\n    | ID\n    | logical_expressionassignment : ID EQUALS expression\n                  | data_type ID EQUALS expression\n                  | ID EQUALS IDdeclaration : data_type IDexpression : expression PLUS term\n    | expression MINUS term\n    | termterm : term TIMES factor\n    | term DIVIDE factor\n    | factorfactor : INTEGER_TYPE\n    | LPAREN expression RPARENmodifier : PUBLIC \n    | PRIVATE \n    | PROTECTED \n    | INTERNALdata_type : INT \n    | FLOAT \n    | BOOL \n    | BYTE \n    | CHAR \n    | SBYTE \n    | DECIMAL \n    | DOUBLE \n    | LONG \n    | SHORT \n    | UINTlogical_operator : OR\n    | AND\n    | NOT\n    | GREATER_THAN\n    | LESS_THAN\n    | GREATER_EQUALS_THAN\n    | LESS_EQUALS_THAN'
    
_lr_action_items = {'USING':([0,],[4,]),'$end':([1,5,15,48,],[0,-1,-5,-6,]),'PUBLIC':([2,3,13,16,49,],[7,-3,-4,7,7,]),'PRIVATE':([2,3,13,16,49,],[8,-3,-4,8,8,]),'PROTECTED':([2,3,13,16,49,],[9,-3,-4,9,9,]),'INTERNAL':([2,3,13,16,49,],[10,-3,-4,10,10,]),'CLASSOBJECT':([4,12,],[11,14,]),'CLASS':([6,7,8,9,10,],[12,-51,-52,-53,-54,]),'VOID':([7,8,9,10,26,],[-51,-52,-53,-54,53,]),'INT':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,34,34,34,34,34,]),'FLOAT':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,35,35,35,35,35,]),'BOOL':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,36,36,36,36,36,]),'BYTE':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,37,37,37,37,37,]),'CHAR':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,38,38,38,38,38,]),'SBYTE':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,39,39,39,39,39,]),'DECIMAL':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,40,40,40,40,40,]),'DOUBLE':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,41,41,41,41,41,]),'LONG':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,42,42,42,42,42,]),'SHORT':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,43,43,43,43,43,]),'UINT':([7,8,9,10,16,26,49,84,85,],[-51,-52,-53,-54,44,44,44,44,44,]),'SEMICOLON':([11,18,20,21,22,23,24,25,30,32,45,47,48,54,60,61,62,63,64,65,68,69,73,74,75,76,77,86,100,103,107,108,113,117,118,119,],[13,49,-10,-11,-12,-13,-14,-15,-45,-31,-48,-49,-6,-42,-18,-19,-20,-21,-22,-23,-43,-44,-41,-39,-50,-46,-47,-40,-24,-32,-25,-26,-30,-27,-28,-29,]),'LBRACKET':([14,87,96,105,106,109,116,],[16,16,16,16,16,16,16,]),'ID':([16,27,33,34,35,36,37,38,39,40,41,42,43,44,49,52,53,55,59,66,88,89,90,91,92,93,94,95,97,114,],[28,54,60,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,28,70,71,73,82,82,82,-66,-67,-68,-69,-70,-71,-72,104,82,]),'IF':([16,49,109,],[31,31,112,]),'RETURN':([16,49,],[33,33,]),'WHILE':([16,49,],[46,46,]),'INTEGER_TYPE':([16,29,33,49,50,51,55,57,58,72,],[47,47,65,47,47,47,47,47,47,47,]),'LPAREN':([16,29,31,46,49,50,51,55,57,58,70,71,72,112,],[29,29,59,66,29,29,29,29,29,29,84,85,29,114,]),'RBRACKET':([17,19,48,49,67,110,111,],[48,-9,-6,-7,-8,-16,-17,]),'PLUS':([21,30,45,47,56,68,69,74,75,76,77,86,],[50,-45,-48,-49,50,-43,-44,50,-50,-46,-47,50,]),'MINUS':([21,30,45,47,56,68,69,74,75,76,77,86,],[51,-45,-48,-49,51,-43,-44,51,-50,-46,-47,51,]),'EQUALS':([28,54,],[55,72,]),'RPAREN':([30,45,47,56,68,69,75,76,77,78,79,80,81,82,83,98,99,101,102,104,115,],[-45,-48,-49,75,-43,-44,-50,-46,-47,87,-34,-35,-36,-37,96,105,106,-38,-33,-42,116,]),'TIMES':([30,45,47,68,69,75,76,77,],[57,-48,-49,57,57,-50,-46,-47,]),'DIVIDE':([30,45,47,68,69,75,76,77,],[58,-48,-49,58,58,-50,-46,-47,]),'FLOAT_TYPE':([33,],[62,]),'DOUBLE_TYPE':([33,],[63,]),'DECIMAL_TYPE':([33,],[64,]),'ELSE':([48,100,117,],[-6,109,109,]),'TRUE':([59,66,88,89,90,91,92,93,94,95,114,],[80,80,80,-66,-67,-68,-69,-70,-71,-72,80,]),'FALSE':([59,66,88,89,90,91,92,93,94,95,114,],[81,81,81,-66,-67,-68,-69,-70,-71,-72,81,]),'OR':([78,79,80,81,82,83,101,102,115,],[89,-34,-35,-36,-37,89,89,-33,89,]),'AND':([78,79,80,81,82,83,101,102,115,],[90,-34,-35,-36,-37,90,90,-33,90,]),'NOT':([78,79,80,81,82,83,101,102,115,],[91,-34,-35,-36,-37,91,91,-33,91,]),'GREATER_THAN':([78,79,80,81,82,83,101,102,115,],[92,-34,-35,-36,-37,92,92,-33,92,]),'LESS_THAN':([78,79,80,81,82,83,101,102,115,],[93,-34,-35,-36,-37,93,93,-33,93,]),'GREATER_EQUALS_THAN':([78,79,80,81,82,83,101,102,115,],[94,-34,-35,-36,-37,94,94,-33,94,]),'LESS_EQUALS_THAN':([78,79,80,81,82,83,101,102,115,],[95,-34,-35,-36,-37,95,95,-33,95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'usings':([0,],[2,]),'using':([0,],[3,]),'class':([2,],[5,]),'modifier':([2,16,49,],[6,26,26,]),'block':([14,87,96,105,106,109,116,],[15,100,103,110,111,113,117,]),'body':([16,49,],[17,67,]),'lines':([16,49,],[18,18,]),'function':([16,49,],[19,19,]),'assignment':([16,49,],[20,20,]),'expression':([16,29,49,55,72,],[21,56,21,74,86,]),'declaration':([16,49,84,85,],[22,22,98,99,]),'if':([16,49,],[23,23,]),'loop':([16,49,],[24,24,]),'return':([16,49,],[25,25,]),'data_type':([16,26,49,84,85,],[27,52,27,97,97,]),'term':([16,29,49,50,51,55,72,],[30,30,30,68,69,30,30,]),'while_loop':([16,49,],[32,32,]),'factor':([16,29,49,50,51,55,57,58,72,],[45,45,45,45,45,45,76,77,45,]),'type':([33,],[61,]),'logical_expression':([59,66,88,114,],[78,83,101,115,]),'logical_factor':([59,66,88,114,],[79,79,102,79,]),'logical_operator':([78,83,101,115,],[88,88,88,88,]),'elseif':([100,117,],[107,118,]),'else':([100,117,],[108,119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> usings class','program',2,'p_program','PLY_yacc.py',21),
  ('usings -> usings','usings',1,'p_usings','PLY_yacc.py',25),
  ('usings -> using','usings',1,'p_usings','PLY_yacc.py',26),
  ('using -> USING CLASSOBJECT SEMICOLON','using',3,'p_using','PLY_yacc.py',30),
  ('class -> modifier CLASS CLASSOBJECT block','class',4,'p_class','PLY_yacc.py',34),
  ('block -> LBRACKET body RBRACKET','block',3,'p_block','PLY_yacc.py',38),
  ('body -> lines SEMICOLON','body',2,'p_body','PLY_yacc.py',42),
  ('body -> lines SEMICOLON body','body',3,'p_body','PLY_yacc.py',43),
  ('body -> function','body',1,'p_body','PLY_yacc.py',44),
  ('lines -> assignment','lines',1,'p_lines','PLY_yacc.py',47),
  ('lines -> expression','lines',1,'p_lines','PLY_yacc.py',48),
  ('lines -> declaration','lines',1,'p_lines','PLY_yacc.py',49),
  ('lines -> if','lines',1,'p_lines','PLY_yacc.py',50),
  ('lines -> loop','lines',1,'p_lines','PLY_yacc.py',51),
  ('lines -> return','lines',1,'p_lines','PLY_yacc.py',52),
  ('function -> modifier data_type ID LPAREN declaration RPAREN block','function',7,'p_funtion','PLY_yacc.py',55),
  ('function -> modifier VOID ID LPAREN declaration RPAREN block','function',7,'p_funtion','PLY_yacc.py',56),
  ('return -> RETURN ID','return',2,'p_return','PLY_yacc.py',59),
  ('return -> RETURN type','return',2,'p_return','PLY_yacc.py',60),
  ('type -> FLOAT_TYPE','type',1,'p_type','PLY_yacc.py',63),
  ('type -> DOUBLE_TYPE','type',1,'p_type','PLY_yacc.py',64),
  ('type -> DECIMAL_TYPE','type',1,'p_type','PLY_yacc.py',65),
  ('type -> INTEGER_TYPE','type',1,'p_type','PLY_yacc.py',66),
  ('if -> IF LPAREN logical_expression RPAREN block','if',5,'p_if','PLY_yacc.py',69),
  ('if -> IF LPAREN logical_expression RPAREN block elseif','if',6,'p_if','PLY_yacc.py',70),
  ('if -> IF LPAREN logical_expression RPAREN block else','if',6,'p_if','PLY_yacc.py',71),
  ('elseif -> ELSE IF LPAREN logical_expression RPAREN block','elseif',6,'p_elseif','PLY_yacc.py',74),
  ('elseif -> ELSE IF LPAREN logical_expression RPAREN block elseif','elseif',7,'p_elseif','PLY_yacc.py',75),
  ('elseif -> ELSE IF LPAREN logical_expression RPAREN block else','elseif',7,'p_elseif','PLY_yacc.py',76),
  ('else -> ELSE block','else',2,'p_else','PLY_yacc.py',79),
  ('loop -> while_loop','loop',1,'p_loop','PLY_yacc.py',82),
  ('while_loop -> WHILE LPAREN logical_expression RPAREN block','while_loop',5,'p_while_loop','PLY_yacc.py',85),
  ('logical_expression -> logical_expression logical_operator logical_factor','logical_expression',3,'p_logical_expression','PLY_yacc.py',88),
  ('logical_expression -> logical_factor','logical_expression',1,'p_logical_expression','PLY_yacc.py',89),
  ('logical_factor -> TRUE','logical_factor',1,'p_logical_factor','PLY_yacc.py',92),
  ('logical_factor -> FALSE','logical_factor',1,'p_logical_factor','PLY_yacc.py',93),
  ('logical_factor -> ID','logical_factor',1,'p_logical_factor','PLY_yacc.py',94),
  ('logical_factor -> logical_expression','logical_factor',1,'p_logical_factor','PLY_yacc.py',95),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','PLY_yacc.py',98),
  ('assignment -> data_type ID EQUALS expression','assignment',4,'p_assignment','PLY_yacc.py',99),
  ('assignment -> ID EQUALS ID','assignment',3,'p_assignment','PLY_yacc.py',100),
  ('declaration -> data_type ID','declaration',2,'p_declaration','PLY_yacc.py',103),
  ('expression -> expression PLUS term','expression',3,'p_expression','PLY_yacc.py',106),
  ('expression -> expression MINUS term','expression',3,'p_expression','PLY_yacc.py',107),
  ('expression -> term','expression',1,'p_expression','PLY_yacc.py',108),
  ('term -> term TIMES factor','term',3,'p_term','PLY_yacc.py',111),
  ('term -> term DIVIDE factor','term',3,'p_term','PLY_yacc.py',112),
  ('term -> factor','term',1,'p_term','PLY_yacc.py',113),
  ('factor -> INTEGER_TYPE','factor',1,'p_factor_num','PLY_yacc.py',116),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_num','PLY_yacc.py',117),
  ('modifier -> PUBLIC','modifier',1,'p_modifier','PLY_yacc.py',120),
  ('modifier -> PRIVATE','modifier',1,'p_modifier','PLY_yacc.py',121),
  ('modifier -> PROTECTED','modifier',1,'p_modifier','PLY_yacc.py',122),
  ('modifier -> INTERNAL','modifier',1,'p_modifier','PLY_yacc.py',123),
  ('data_type -> INT','data_type',1,'p_data_type','PLY_yacc.py',126),
  ('data_type -> FLOAT','data_type',1,'p_data_type','PLY_yacc.py',127),
  ('data_type -> BOOL','data_type',1,'p_data_type','PLY_yacc.py',128),
  ('data_type -> BYTE','data_type',1,'p_data_type','PLY_yacc.py',129),
  ('data_type -> CHAR','data_type',1,'p_data_type','PLY_yacc.py',130),
  ('data_type -> SBYTE','data_type',1,'p_data_type','PLY_yacc.py',131),
  ('data_type -> DECIMAL','data_type',1,'p_data_type','PLY_yacc.py',132),
  ('data_type -> DOUBLE','data_type',1,'p_data_type','PLY_yacc.py',133),
  ('data_type -> LONG','data_type',1,'p_data_type','PLY_yacc.py',134),
  ('data_type -> SHORT','data_type',1,'p_data_type','PLY_yacc.py',135),
  ('data_type -> UINT','data_type',1,'p_data_type','PLY_yacc.py',136),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','PLY_yacc.py',139),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','PLY_yacc.py',140),
  ('logical_operator -> NOT','logical_operator',1,'p_logical_operator','PLY_yacc.py',141),
  ('logical_operator -> GREATER_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',142),
  ('logical_operator -> LESS_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',143),
  ('logical_operator -> GREATER_EQUALS_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',144),
  ('logical_operator -> LESS_EQUALS_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',145),
]
