
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BYTE CHAR CHARACTER CLASS CLASSOBJECT COMMA DECIMAL DECIMAL_TYPE DIVIDE DIVIDE_EQUAL DO DOT DOUBLE DOUBLE_TYPE ELSE EQUALITY EQUALS FALSE FILE FLOAT FLOAT_TYPE FOR GREATER_EQUALS_THAN GREATER_THAN ID IF INT INTEGER_TYPE INTERNAL LBRACKET LESS_EQUALS_THAN LESS_THAN LONG LPAREN LSQBRACKET MINUS MINUS_EQUAL MODULE MODULE_EQUAL NAMESPACE NEW NINT NOT NUINT OR PLUS PLUS_EQUAL PRIVATE PROTECTED PUBLIC RBRACKET RETURN RPAREN RSQBRACKET SBYTE SEMICOLON SHORT STATIC STRING THEN TIMES TIMES_EQUAL TRUE UINT ULONG USHORT USING VAR VOID WHILEprogram : usings namespace class\n    | namespace classusings : using usings\n    | usingusing : USING CLASSOBJECT SEMICOLONnamespace : NAMESPACE CLASSOBJECT SEMICOLONclass : modifier CLASS CLASSOBJECT block\n    | modifier STATIC CLASS CLASSOBJECT blockobject_access : ID DOT ID\n    | CLASSOBJECT DOT CLASSOBJECT\n    | ID DOT CLASSOBJECT\n    | CLASSOBJECT DOT IDblock : LBRACKET body RBRACKETbody : lines SEMICOLON\n            | lines SEMICOLON body\n            | functionlines : assignment \n    | expression \n    | declaration\n    | if\n    | loop\n    | returnfunction : modifier data_type ID LPAREN declarations RPAREN block\n                | modifier VOID ID LPAREN declarations RPAREN block\n                | modifier STATIC data_type ID LPAREN declarations RPAREN block\n                | modifier STATIC VOID ID LPAREN declarations RPAREN blockreturn : RETURN ID\n               | RETURN typetype : FLOAT_TYPE\n    | DOUBLE_TYPE\n    | DECIMAL_TYPE\n    | INTEGER_TYPEif : IF LPAREN logical_expression RPAREN block\n    | IF LPAREN logical_expression RPAREN block elseif\n    | IF LPAREN logical_expression RPAREN block elseelseif : ELSE IF LPAREN logical_expression RPAREN block\n    | ELSE IF LPAREN logical_expression RPAREN block elseif\n    | ELSE IF LPAREN logical_expression RPAREN block elseelse : ELSE blockloop : while_loopwhile_loop : WHILE LPAREN logical_expression RPAREN blocklogical_expression : logical_expression logical_operator logical_factor\n    | logical_factorlogical_factor : TRUE\n    | FALSE\n    | ID\n    | indexing\n    | type\n    | object_access\n    | LPAREN logical_expression RPARENlogical_operator : OR\n    | AND\n    | NOT\n    | GREATER_THAN\n    | LESS_THAN\n    | GREATER_EQUALS_THAN\n    | LESS_EQUALS_THAN\n    | EQUALITYassignment : ID EQUALS expression\n                  | data_type ID EQUALS expression\n                  | CLASSOBJECT IDdeclarations : declaration\n    | declaration COMMA\n    | declaration COMMA declarationsdeclaration : data_type IDexpression : expression PLUS term\n    | expression MINUS term\n    | termterm : term TIMES factor\n    | term DIVIDE factor\n    | factorfactor : type\n    | LPAREN expression RPAREN\n    | object_access\n    | ID\n    | indexingmodifier : PUBLIC \n    | PRIVATE \n    | PROTECTED \n    | INTERNAL data_type : primitive\n    | data_structureprimitive : INT \n    | FLOAT \n    | BOOL \n    | BYTE \n    | CHAR \n    | SBYTE \n    | DECIMAL \n    | DOUBLE \n    | LONG \n    | SHORT \n    | UINTdata_structure : arrayarray : primitive LSQBRACKET RSQBRACKET\n    | CLASSOBJECT LSQBRACKET RSQBRACKETindexing : ID LSQBRACKET INTEGER_TYPE RSQBRACKET\n    | ID LSQBRACKET ID RSQBRACKET'
    
_lr_action_items = {'NAMESPACE':([0,2,4,14,21,],[5,5,-4,-3,-5,]),'USING':([0,4,21,],[6,6,-5,]),'$end':([1,8,17,24,68,69,],[0,-2,-1,-7,-8,-13,]),'PUBLIC':([3,7,20,25,70,],[10,10,-6,10,10,]),'PRIVATE':([3,7,20,25,70,],[11,11,-6,11,11,]),'PROTECTED':([3,7,20,25,70,],[12,12,-6,12,12,]),'INTERNAL':([3,7,20,25,70,],[13,13,-6,13,13,]),'CLASSOBJECT':([5,6,10,11,12,13,18,23,25,36,39,70,71,72,75,78,79,86,87,88,89,93,101,113,124,125,133,134,135,136,137,138,139,140,141,147,148,155,171,],[15,16,-77,-78,-79,-80,22,26,40,76,83,40,83,83,76,83,104,109,83,83,83,83,83,83,76,76,83,-51,-52,-53,-54,-55,-56,-57,-58,76,76,76,83,]),'CLASS':([9,10,11,12,13,19,],[18,-77,-78,-79,-80,23,]),'STATIC':([9,10,11,12,13,36,],[19,-77,-78,-79,-80,75,]),'VOID':([10,11,12,13,36,75,],[-77,-78,-79,-80,74,100,]),'INT':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,50,50,50,50,50,50,50,50,50,]),'FLOAT':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,51,51,51,51,51,51,51,51,51,]),'BOOL':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,52,52,52,52,52,52,52,52,52,]),'BYTE':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,53,53,53,53,53,53,53,53,53,]),'CHAR':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,54,54,54,54,54,54,54,54,54,]),'SBYTE':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,55,55,55,55,55,55,55,55,55,]),'DECIMAL':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,56,56,56,56,56,56,56,56,56,]),'DOUBLE':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,57,57,57,57,57,57,57,57,57,]),'LONG':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,58,58,58,58,58,58,58,58,58,]),'SHORT':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,59,59,59,59,59,59,59,59,59,]),'UINT':([10,11,12,13,25,36,70,75,124,125,147,148,155,],[-77,-78,-79,-80,60,60,60,60,60,60,60,60,60,]),'SEMICOLON':([15,16,28,30,31,32,33,34,35,38,41,43,45,48,62,63,64,65,66,67,69,77,82,84,90,91,95,96,102,103,104,107,109,110,111,112,128,129,130,150,152,159,160,168,174,175,176,],[20,21,70,-17,-18,-19,-20,-21,-22,-75,-68,-40,-72,-71,-74,-76,-29,-30,-31,-32,-13,-65,-75,-61,-27,-28,-66,-67,-59,-9,-11,-73,-10,-12,-69,-70,-60,-98,-97,-33,-41,-34,-35,-39,-36,-37,-38,]),'LBRACKET':([22,26,132,142,154,156,161,165,166,173,],[25,25,25,25,25,25,25,25,25,25,]),'ID':([25,37,39,40,44,46,47,50,51,52,53,54,55,56,57,58,59,60,61,70,71,72,73,74,78,79,80,86,87,88,89,93,99,100,101,108,113,122,133,134,135,136,137,138,139,140,141,143,171,],[38,77,82,84,90,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,38,82,82,97,98,82,103,105,110,82,82,118,118,126,127,82,-96,118,-95,118,-51,-52,-53,-54,-55,-56,-57,-58,153,118,]),'IF':([25,70,161,],[42,42,167,]),'RETURN':([25,70,],[44,44,]),'WHILE':([25,70,],[49,49,]),'LPAREN':([25,39,42,49,70,71,72,78,87,88,89,93,97,98,101,113,126,127,133,134,135,136,137,138,139,140,141,167,171,],[39,39,89,93,39,39,39,39,39,39,113,113,124,125,39,113,147,148,113,-51,-52,-53,-54,-55,-56,-57,-58,171,113,]),'FLOAT_TYPE':([25,39,44,70,71,72,78,87,88,89,93,101,113,133,134,135,136,137,138,139,140,141,171,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,-51,-52,-53,-54,-55,-56,-57,-58,64,]),'DOUBLE_TYPE':([25,39,44,70,71,72,78,87,88,89,93,101,113,133,134,135,136,137,138,139,140,141,171,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,-51,-52,-53,-54,-55,-56,-57,-58,65,]),'DECIMAL_TYPE':([25,39,44,70,71,72,78,87,88,89,93,101,113,133,134,135,136,137,138,139,140,141,171,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,-51,-52,-53,-54,-55,-56,-57,-58,66,]),'INTEGER_TYPE':([25,39,44,70,71,72,78,80,87,88,89,93,101,113,133,134,135,136,137,138,139,140,141,171,],[67,67,67,67,67,67,67,106,67,67,67,67,67,67,67,-51,-52,-53,-54,-55,-56,-57,-58,67,]),'RBRACKET':([27,29,69,70,94,162,164,169,170,],[69,-16,-13,-14,-15,-23,-24,-25,-26,]),'PLUS':([31,38,41,45,48,62,63,64,65,66,67,81,82,95,96,102,103,104,107,109,110,111,112,128,129,130,],[71,-75,-68,-72,-71,-74,-76,-29,-30,-31,-32,71,-75,-66,-67,71,-9,-11,-73,-10,-12,-69,-70,71,-98,-97,]),'MINUS':([31,38,41,45,48,62,63,64,65,66,67,81,82,95,96,102,103,104,107,109,110,111,112,128,129,130,],[72,-75,-68,-72,-71,-74,-76,-29,-30,-31,-32,72,-75,-66,-67,72,-9,-11,-73,-10,-12,-69,-70,72,-98,-97,]),'EQUALS':([38,77,],[78,101,]),'TIMES':([38,41,45,48,62,63,64,65,66,67,82,95,96,103,104,107,109,110,111,112,129,130,],[-75,87,-72,-71,-74,-76,-29,-30,-31,-32,-75,87,87,-9,-11,-73,-10,-12,-69,-70,-98,-97,]),'DIVIDE':([38,41,45,48,62,63,64,65,66,67,82,95,96,103,104,107,109,110,111,112,129,130,],[-75,88,-72,-71,-74,-76,-29,-30,-31,-32,-75,88,88,-9,-11,-73,-10,-12,-69,-70,-98,-97,]),'DOT':([38,40,82,83,118,],[79,86,79,86,79,]),'LSQBRACKET':([38,40,46,50,51,52,53,54,55,56,57,58,59,60,76,82,118,],[80,85,92,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,85,80,80,]),'RPAREN':([41,45,48,62,63,64,65,66,67,81,82,95,96,103,104,107,109,110,111,112,114,115,116,117,118,119,120,121,123,129,130,131,144,145,146,149,151,153,155,157,158,163,172,],[-68,-72,-71,-74,-76,-29,-30,-31,-32,107,-75,-66,-67,-9,-11,-73,-10,-12,-69,-70,132,-43,-44,-45,-46,-47,-48,-49,142,-98,-97,149,154,-62,156,-50,-42,-65,-63,165,166,-64,173,]),'OR':([64,65,66,67,103,104,109,110,114,115,116,117,118,119,120,121,123,129,130,131,149,151,172,],[-29,-30,-31,-32,-9,-11,-10,-12,134,-43,-44,-45,-46,-47,-48,-49,134,-98,-97,134,-50,-42,134,]),'AND':([64,65,66,67,103,104,109,110,114,115,116,117,118,119,120,121,123,129,130,131,149,151,172,],[-29,-30,-31,-32,-9,-11,-10,-12,135,-43,-44,-45,-46,-47,-48,-49,135,-98,-97,135,-50,-42,135,]),'NOT':([64,65,66,67,103,104,109,110,114,115,116,117,118,119,120,121,123,129,130,131,149,151,172,],[-29,-30,-31,-32,-9,-11,-10,-12,136,-43,-44,-45,-46,-47,-48,-49,136,-98,-97,136,-50,-42,136,]),'GREATER_THAN':([64,65,66,67,103,104,109,110,114,115,116,117,118,119,120,121,123,129,130,131,149,151,172,],[-29,-30,-31,-32,-9,-11,-10,-12,137,-43,-44,-45,-46,-47,-48,-49,137,-98,-97,137,-50,-42,137,]),'LESS_THAN':([64,65,66,67,103,104,109,110,114,115,116,117,118,119,120,121,123,129,130,131,149,151,172,],[-29,-30,-31,-32,-9,-11,-10,-12,138,-43,-44,-45,-46,-47,-48,-49,138,-98,-97,138,-50,-42,138,]),'GREATER_EQUALS_THAN':([64,65,66,67,103,104,109,110,114,115,116,117,118,119,120,121,123,129,130,131,149,151,172,],[-29,-30,-31,-32,-9,-11,-10,-12,139,-43,-44,-45,-46,-47,-48,-49,139,-98,-97,139,-50,-42,139,]),'LESS_EQUALS_THAN':([64,65,66,67,103,104,109,110,114,115,116,117,118,119,120,121,123,129,130,131,149,151,172,],[-29,-30,-31,-32,-9,-11,-10,-12,140,-43,-44,-45,-46,-47,-48,-49,140,-98,-97,140,-50,-42,140,]),'EQUALITY':([64,65,66,67,103,104,109,110,114,115,116,117,118,119,120,121,123,129,130,131,149,151,172,],[-29,-30,-31,-32,-9,-11,-10,-12,141,-43,-44,-45,-46,-47,-48,-49,141,-98,-97,141,-50,-42,141,]),'ELSE':([69,150,174,],[-13,161,161,]),'RSQBRACKET':([85,92,105,106,],[108,122,129,130,]),'TRUE':([89,93,113,133,134,135,136,137,138,139,140,141,171,],[116,116,116,116,-51,-52,-53,-54,-55,-56,-57,-58,116,]),'FALSE':([89,93,113,133,134,135,136,137,138,139,140,141,171,],[117,117,117,117,-51,-52,-53,-54,-55,-56,-57,-58,117,]),'COMMA':([145,153,],[155,-65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'usings':([0,4,],[2,14,]),'namespace':([0,2,],[3,7,]),'using':([0,4,],[4,4,]),'class':([3,7,],[8,17,]),'modifier':([3,7,25,70,],[9,9,36,36,]),'block':([22,26,132,142,154,156,161,165,166,173,],[24,68,150,152,162,164,168,169,170,174,]),'body':([25,70,],[27,94,]),'lines':([25,70,],[28,28,]),'function':([25,70,],[29,29,]),'assignment':([25,70,],[30,30,]),'expression':([25,39,70,78,101,],[31,81,31,102,128,]),'declaration':([25,70,124,125,147,148,155,],[32,32,145,145,145,145,145,]),'if':([25,70,],[33,33,]),'loop':([25,70,],[34,34,]),'return':([25,70,],[35,35,]),'data_type':([25,36,70,75,124,125,147,148,155,],[37,73,37,99,143,143,143,143,143,]),'term':([25,39,70,71,72,78,101,],[41,41,41,95,96,41,41,]),'while_loop':([25,70,],[43,43,]),'type':([25,39,44,70,71,72,78,87,88,89,93,101,113,133,171,],[45,45,91,45,45,45,45,45,45,120,120,45,120,120,120,]),'primitive':([25,36,70,75,124,125,147,148,155,],[46,46,46,46,46,46,46,46,46,]),'data_structure':([25,36,70,75,124,125,147,148,155,],[47,47,47,47,47,47,47,47,47,]),'factor':([25,39,70,71,72,78,87,88,101,],[48,48,48,48,48,48,111,112,48,]),'array':([25,36,70,75,124,125,147,148,155,],[61,61,61,61,61,61,61,61,61,]),'object_access':([25,39,70,71,72,78,87,88,89,93,101,113,133,171,],[62,62,62,62,62,62,62,62,121,121,62,121,121,121,]),'indexing':([25,39,70,71,72,78,87,88,89,93,101,113,133,171,],[63,63,63,63,63,63,63,63,119,119,63,119,119,119,]),'logical_expression':([89,93,113,171,],[114,123,131,172,]),'logical_factor':([89,93,113,133,171,],[115,115,115,151,115,]),'logical_operator':([114,123,131,172,],[133,133,133,133,]),'declarations':([124,125,147,148,155,],[144,146,157,158,163,]),'elseif':([150,174,],[159,175,]),'else':([150,174,],[160,176,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> usings namespace class','program',3,'p_program','PLY_yacc.py',26),
  ('program -> namespace class','program',2,'p_program','PLY_yacc.py',27),
  ('usings -> using usings','usings',2,'p_usings','PLY_yacc.py',31),
  ('usings -> using','usings',1,'p_usings','PLY_yacc.py',32),
  ('using -> USING CLASSOBJECT SEMICOLON','using',3,'p_using','PLY_yacc.py',36),
  ('namespace -> NAMESPACE CLASSOBJECT SEMICOLON','namespace',3,'p_namespace','PLY_yacc.py',40),
  ('class -> modifier CLASS CLASSOBJECT block','class',4,'p_class','PLY_yacc.py',43),
  ('class -> modifier STATIC CLASS CLASSOBJECT block','class',5,'p_class','PLY_yacc.py',44),
  ('object_access -> ID DOT ID','object_access',3,'p_object_access','PLY_yacc.py',48),
  ('object_access -> CLASSOBJECT DOT CLASSOBJECT','object_access',3,'p_object_access','PLY_yacc.py',49),
  ('object_access -> ID DOT CLASSOBJECT','object_access',3,'p_object_access','PLY_yacc.py',50),
  ('object_access -> CLASSOBJECT DOT ID','object_access',3,'p_object_access','PLY_yacc.py',51),
  ('block -> LBRACKET body RBRACKET','block',3,'p_block','PLY_yacc.py',54),
  ('body -> lines SEMICOLON','body',2,'p_body','PLY_yacc.py',58),
  ('body -> lines SEMICOLON body','body',3,'p_body','PLY_yacc.py',59),
  ('body -> function','body',1,'p_body','PLY_yacc.py',60),
  ('lines -> assignment','lines',1,'p_lines','PLY_yacc.py',64),
  ('lines -> expression','lines',1,'p_lines','PLY_yacc.py',65),
  ('lines -> declaration','lines',1,'p_lines','PLY_yacc.py',66),
  ('lines -> if','lines',1,'p_lines','PLY_yacc.py',67),
  ('lines -> loop','lines',1,'p_lines','PLY_yacc.py',68),
  ('lines -> return','lines',1,'p_lines','PLY_yacc.py',69),
  ('function -> modifier data_type ID LPAREN declarations RPAREN block','function',7,'p_funtion','PLY_yacc.py',73),
  ('function -> modifier VOID ID LPAREN declarations RPAREN block','function',7,'p_funtion','PLY_yacc.py',74),
  ('function -> modifier STATIC data_type ID LPAREN declarations RPAREN block','function',8,'p_funtion','PLY_yacc.py',75),
  ('function -> modifier STATIC VOID ID LPAREN declarations RPAREN block','function',8,'p_funtion','PLY_yacc.py',76),
  ('return -> RETURN ID','return',2,'p_return','PLY_yacc.py',79),
  ('return -> RETURN type','return',2,'p_return','PLY_yacc.py',80),
  ('type -> FLOAT_TYPE','type',1,'p_type','PLY_yacc.py',83),
  ('type -> DOUBLE_TYPE','type',1,'p_type','PLY_yacc.py',84),
  ('type -> DECIMAL_TYPE','type',1,'p_type','PLY_yacc.py',85),
  ('type -> INTEGER_TYPE','type',1,'p_type','PLY_yacc.py',86),
  ('if -> IF LPAREN logical_expression RPAREN block','if',5,'p_if','PLY_yacc.py',89),
  ('if -> IF LPAREN logical_expression RPAREN block elseif','if',6,'p_if','PLY_yacc.py',90),
  ('if -> IF LPAREN logical_expression RPAREN block else','if',6,'p_if','PLY_yacc.py',91),
  ('elseif -> ELSE IF LPAREN logical_expression RPAREN block','elseif',6,'p_elseif','PLY_yacc.py',94),
  ('elseif -> ELSE IF LPAREN logical_expression RPAREN block elseif','elseif',7,'p_elseif','PLY_yacc.py',95),
  ('elseif -> ELSE IF LPAREN logical_expression RPAREN block else','elseif',7,'p_elseif','PLY_yacc.py',96),
  ('else -> ELSE block','else',2,'p_else','PLY_yacc.py',99),
  ('loop -> while_loop','loop',1,'p_loop','PLY_yacc.py',102),
  ('while_loop -> WHILE LPAREN logical_expression RPAREN block','while_loop',5,'p_while_loop','PLY_yacc.py',105),
  ('logical_expression -> logical_expression logical_operator logical_factor','logical_expression',3,'p_logical_expression','PLY_yacc.py',108),
  ('logical_expression -> logical_factor','logical_expression',1,'p_logical_expression','PLY_yacc.py',109),
  ('logical_factor -> TRUE','logical_factor',1,'p_logical_factor','PLY_yacc.py',112),
  ('logical_factor -> FALSE','logical_factor',1,'p_logical_factor','PLY_yacc.py',113),
  ('logical_factor -> ID','logical_factor',1,'p_logical_factor','PLY_yacc.py',114),
  ('logical_factor -> indexing','logical_factor',1,'p_logical_factor','PLY_yacc.py',115),
  ('logical_factor -> type','logical_factor',1,'p_logical_factor','PLY_yacc.py',116),
  ('logical_factor -> object_access','logical_factor',1,'p_logical_factor','PLY_yacc.py',117),
  ('logical_factor -> LPAREN logical_expression RPAREN','logical_factor',3,'p_logical_factor','PLY_yacc.py',118),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','PLY_yacc.py',121),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','PLY_yacc.py',122),
  ('logical_operator -> NOT','logical_operator',1,'p_logical_operator','PLY_yacc.py',123),
  ('logical_operator -> GREATER_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',124),
  ('logical_operator -> LESS_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',125),
  ('logical_operator -> GREATER_EQUALS_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',126),
  ('logical_operator -> LESS_EQUALS_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',127),
  ('logical_operator -> EQUALITY','logical_operator',1,'p_logical_operator','PLY_yacc.py',128),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','PLY_yacc.py',132),
  ('assignment -> data_type ID EQUALS expression','assignment',4,'p_assignment','PLY_yacc.py',133),
  ('assignment -> CLASSOBJECT ID','assignment',2,'p_assignment','PLY_yacc.py',134),
  ('declarations -> declaration','declarations',1,'p_declarations','PLY_yacc.py',137),
  ('declarations -> declaration COMMA','declarations',2,'p_declarations','PLY_yacc.py',138),
  ('declarations -> declaration COMMA declarations','declarations',3,'p_declarations','PLY_yacc.py',139),
  ('declaration -> data_type ID','declaration',2,'p_declaration','PLY_yacc.py',142),
  ('expression -> expression PLUS term','expression',3,'p_expression','PLY_yacc.py',145),
  ('expression -> expression MINUS term','expression',3,'p_expression','PLY_yacc.py',146),
  ('expression -> term','expression',1,'p_expression','PLY_yacc.py',147),
  ('term -> term TIMES factor','term',3,'p_term','PLY_yacc.py',150),
  ('term -> term DIVIDE factor','term',3,'p_term','PLY_yacc.py',151),
  ('term -> factor','term',1,'p_term','PLY_yacc.py',152),
  ('factor -> type','factor',1,'p_factor','PLY_yacc.py',162),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','PLY_yacc.py',163),
  ('factor -> object_access','factor',1,'p_factor','PLY_yacc.py',164),
  ('factor -> ID','factor',1,'p_factor','PLY_yacc.py',165),
  ('factor -> indexing','factor',1,'p_factor','PLY_yacc.py',166),
  ('modifier -> PUBLIC','modifier',1,'p_modifier','PLY_yacc.py',173),
  ('modifier -> PRIVATE','modifier',1,'p_modifier','PLY_yacc.py',174),
  ('modifier -> PROTECTED','modifier',1,'p_modifier','PLY_yacc.py',175),
  ('modifier -> INTERNAL','modifier',1,'p_modifier','PLY_yacc.py',176),
  ('data_type -> primitive','data_type',1,'p_data_type','PLY_yacc.py',179),
  ('data_type -> data_structure','data_type',1,'p_data_type','PLY_yacc.py',180),
  ('primitive -> INT','primitive',1,'p_primitive','PLY_yacc.py',183),
  ('primitive -> FLOAT','primitive',1,'p_primitive','PLY_yacc.py',184),
  ('primitive -> BOOL','primitive',1,'p_primitive','PLY_yacc.py',185),
  ('primitive -> BYTE','primitive',1,'p_primitive','PLY_yacc.py',186),
  ('primitive -> CHAR','primitive',1,'p_primitive','PLY_yacc.py',187),
  ('primitive -> SBYTE','primitive',1,'p_primitive','PLY_yacc.py',188),
  ('primitive -> DECIMAL','primitive',1,'p_primitive','PLY_yacc.py',189),
  ('primitive -> DOUBLE','primitive',1,'p_primitive','PLY_yacc.py',190),
  ('primitive -> LONG','primitive',1,'p_primitive','PLY_yacc.py',191),
  ('primitive -> SHORT','primitive',1,'p_primitive','PLY_yacc.py',192),
  ('primitive -> UINT','primitive',1,'p_primitive','PLY_yacc.py',193),
  ('data_structure -> array','data_structure',1,'p_data_structure','PLY_yacc.py',196),
  ('array -> primitive LSQBRACKET RSQBRACKET','array',3,'p_array','PLY_yacc.py',199),
  ('array -> CLASSOBJECT LSQBRACKET RSQBRACKET','array',3,'p_array','PLY_yacc.py',200),
  ('indexing -> ID LSQBRACKET INTEGER_TYPE RSQBRACKET','indexing',4,'p_indexing','PLY_yacc.py',203),
  ('indexing -> ID LSQBRACKET ID RSQBRACKET','indexing',4,'p_indexing','PLY_yacc.py',204),
]
