
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARROW BOOL BYTE CHAR CHARACTER CLASS CLASSOBJECT COMMA DECIMAL DECIMAL_TYPE DIVIDE DIVIDE_EQUAL DO DOT DOUBLE DOUBLE_TYPE ELSE EQUALITY EQUALS FALSE FILE FLOAT FLOAT_TYPE FOR GREATER_EQUALS_THAN GREATER_THAN ID IF IN INT INTEGER_TYPE INTERNAL LBRACKET LESS_EQUALS_THAN LESS_THAN LIST LONG LPAREN LSQBRACKET MINUS MINUS_EQUAL MODULE MODULE_EQUAL NAMESPACE NEW NINT NOT NUINT OR PLUS PLUS_EQUAL PRIVATE PROTECTED PUBLIC RBRACKET RETURN RPAREN RSQBRACKET SBYTE SEMICOLON SHORT STATIC STRING THEN TIMES TIMES_EQUAL TRUE UINT ULONG USHORT USING VAR VOID WHILEprogram : usings namespace class\n    | namespace classusings : using usings\n    | usingusing : USING CLASSOBJECT SEMICOLONnamespace : NAMESPACE CLASSOBJECT SEMICOLONclass : modifier CLASS CLASSOBJECT block\n    | modifier STATIC CLASS CLASSOBJECT blockobject_access : ID DOT ID\n    | CLASSOBJECT DOT CLASSOBJECT\n    | ID DOT CLASSOBJECT\n    | CLASSOBJECT DOT IDblock : LBRACKET body RBRACKETbody : lines SEMICOLON\n            | lines SEMICOLON body\n            | if\n            | loop\n            | functionlines : assignment \n    | expression \n    | declaration\n    | returnfunction : modifier data_type ID LPAREN declarations RPAREN block\n                | modifier VOID ID LPAREN declarations RPAREN block\n                | modifier STATIC data_type ID LPAREN declarations RPAREN block\n                | modifier STATIC VOID ID LPAREN declarations RPAREN blockreturn : RETURN ID\n               | RETURN typelambda_function : LPAREN ID RPAREN ARROW expression\n                       | LPAREN ID RPAREN ARROW blockexpression : object_access LPAREN expression RPARENexpression : object_access LPAREN RPARENif : IF LPAREN logical_expression RPAREN block\n    | IF LPAREN logical_expression RPAREN block body\n    | IF LPAREN logical_expression RPAREN block elseif\n    | IF LPAREN logical_expression RPAREN block elseelseif : ELSE IF LPAREN logical_expression RPAREN block\n    | ELSE IF LPAREN logical_expression RPAREN block elseif\n    | ELSE IF LPAREN logical_expression RPAREN block elseelse : ELSE block\n    | ELSE block bodyloop : while_loop\n            | loop_forloop_for : FOR LPAREN assignment SEMICOLON logical_expression SEMICOLON assignment RPAREN block\n    | FOR LPAREN assignment SEMICOLON logical_expression SEMICOLON assignment RPAREN block bodywhile_loop : WHILE LPAREN logical_expression RPAREN block\n    | WHILE LPAREN logical_expression RPAREN block bodylogical_expression : logical_expression logical_operator logical_factor\n    | logical_factorlogical_factor : TRUE\n    | FALSE\n    | ID\n    | indexing\n    | type\n    | object_access\n    | LPAREN logical_expression RPARENlogical_operator : OR\n    | AND\n    | NOT\n    | GREATER_THAN\n    | LESS_THAN\n    | GREATER_EQUALS_THAN\n    | LESS_EQUALS_THAN\n    | EQUALITYdata_structure : data_structure_list\n                      | data_structure_arraydata_structure_list : LIST LESS_THAN data_type GREATER_THAN ID LSQBRACKET type RSQBRACKETdata_structure_array : primitive LSQBRACKET RSQBRACKET\n    | CLASSOBJECT LSQBRACKET RSQBRACKETassignment : data_type ID EQUALS expressionassignment : ID EQUALS expressionassignment_class : CLASSOBJECT IDexpression : expression PLUS term\n    | expression MINUS term\n    | termterm : term TIMES factor\n    | term DIVIDE factor\n    | factorfactor : type\n    | LPAREN expression RPAREN\n    | object_access\n    | ID\n    | indexingtype : FLOAT_TYPE\n    | DOUBLE_TYPE\n    | DECIMAL_TYPE\n    | INTEGER_TYPE\n    | MINUS typedeclarations : declaration\n    | declaration COMMA\n    | declaration COMMA declarationsdeclaration : data_type IDmodifier : PUBLIC \n    | PRIVATE \n    | PROTECTED \n    | INTERNAL data_type : primitive\n    | data_structureprimitive : INT \n    | FLOAT \n    | BOOL \n    | BYTE \n    | CHAR \n    | SBYTE \n    | DECIMAL \n    | DOUBLE \n    | LONG \n    | SHORT \n    | UINTindexing : ID LSQBRACKET INTEGER_TYPE RSQBRACKET\n    | ID LSQBRACKET ID RSQBRACKET'
    
_lr_action_items = {'NAMESPACE':([0,2,4,14,21,],[5,5,-4,-3,-5,]),'USING':([0,4,21,],[6,6,-5,]),'$end':([1,8,17,24,73,74,],[0,-2,-1,-7,-8,-13,]),'PUBLIC':([3,7,20,25,74,75,164,172,189,204,],[10,10,-6,10,-13,10,10,10,10,10,]),'PRIVATE':([3,7,20,25,74,75,164,172,189,204,],[11,11,-6,11,-13,11,11,11,11,11,]),'PROTECTED':([3,7,20,25,74,75,164,172,189,204,],[12,12,-6,12,-13,12,12,12,12,12,]),'INTERNAL':([3,7,20,25,74,75,164,172,189,204,],[13,13,-6,13,-13,13,13,13,13,13,]),'CLASSOBJECT':([5,6,10,11,12,13,18,23,25,37,40,74,75,76,77,78,84,87,88,90,91,92,96,97,99,101,107,121,142,143,144,145,146,147,148,149,150,151,152,160,164,170,171,172,181,186,189,197,204,],[15,16,-93,-94,-95,-96,22,26,52,81,85,-13,52,81,81,81,85,81,124,81,81,81,81,85,136,85,81,81,81,-57,-58,-59,-60,-61,-62,-63,-64,85,85,81,52,85,85,52,85,85,52,81,52,]),'CLASS':([9,10,11,12,13,19,],[18,-93,-94,-95,-96,23,]),'STATIC':([9,10,11,12,13,40,],[19,-93,-94,-95,-96,84,]),'VOID':([10,11,12,13,40,84,],[-93,-94,-95,-96,83,120,]),'INT':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,54,54,-13,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'FLOAT':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,55,55,-13,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'BOOL':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,56,56,-13,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'BYTE':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,57,57,-13,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'CHAR':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,58,58,-13,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'SBYTE':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,59,59,-13,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'DECIMAL':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,60,60,-13,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'DOUBLE':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,61,61,-13,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'LONG':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,62,62,-13,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'SHORT':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,63,63,-13,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'UINT':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,64,64,-13,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'LIST':([10,11,12,13,25,40,74,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[-93,-94,-95,-96,68,68,-13,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'SEMICOLON':([15,16,28,32,33,34,35,42,43,44,47,53,67,69,70,71,72,80,86,93,94,95,103,104,105,106,109,110,111,112,113,114,115,116,122,123,124,128,129,130,132,136,137,155,156,157,158,163,165,173,],[20,21,75,-19,-20,-21,-22,-82,-81,-75,-79,-78,-83,-84,-85,-86,-87,-82,-92,-88,-27,-28,-73,-81,-82,-74,-49,-50,-51,-52,-53,-54,-55,-80,-71,-9,-11,-32,-76,-77,160,-10,-12,-70,-111,-110,-31,-56,-48,186,]),'LBRACKET':([22,26,141,159,178,180,182,193,194,201,205,],[25,25,25,25,25,25,25,25,25,25,25,]),'IF':([25,74,75,164,172,178,189,204,],[36,-13,36,36,36,188,36,36,]),'ID':([25,37,41,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,74,75,76,77,78,82,83,87,88,89,90,91,92,96,97,99,107,119,120,121,133,135,138,142,143,144,145,146,147,148,149,150,160,162,164,166,172,186,189,197,202,204,],[42,80,86,94,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-65,-66,-13,42,105,105,112,117,118,80,123,125,80,105,105,112,134,137,112,153,154,80,161,-68,-69,112,-57,-58,-59,-60,-61,-62,-63,-64,112,174,42,179,42,134,42,112,-67,42,]),'RETURN':([25,74,75,164,172,189,204,],[46,-13,46,46,46,46,46,]),'WHILE':([25,74,75,164,172,189,204,],[48,-13,48,48,48,48,48,]),'FOR':([25,74,75,164,172,189,204,],[49,-13,49,49,49,49,49,]),'LPAREN':([25,36,37,43,48,49,74,75,76,77,78,87,90,91,92,96,107,117,118,121,123,124,136,137,142,143,144,145,146,147,148,149,150,153,154,160,164,172,188,189,197,204,],[37,78,37,90,96,97,-13,37,37,37,107,37,37,37,37,107,107,151,152,37,-9,-11,-10,-12,107,-57,-58,-59,-60,-61,-62,-63,-64,170,171,107,37,37,197,37,107,37,]),'FLOAT_TYPE':([25,37,45,46,74,75,76,77,78,87,90,91,92,96,107,121,142,143,144,145,146,147,148,149,150,160,164,172,187,189,197,204,],[69,69,69,69,-13,69,69,69,69,69,69,69,69,69,69,69,69,-57,-58,-59,-60,-61,-62,-63,-64,69,69,69,69,69,69,69,]),'DOUBLE_TYPE':([25,37,45,46,74,75,76,77,78,87,90,91,92,96,107,121,142,143,144,145,146,147,148,149,150,160,164,172,187,189,197,204,],[70,70,70,70,-13,70,70,70,70,70,70,70,70,70,70,70,70,-57,-58,-59,-60,-61,-62,-63,-64,70,70,70,70,70,70,70,]),'DECIMAL_TYPE':([25,37,45,46,74,75,76,77,78,87,90,91,92,96,107,121,142,143,144,145,146,147,148,149,150,160,164,172,187,189,197,204,],[71,71,71,71,-13,71,71,71,71,71,71,71,71,71,71,71,71,-57,-58,-59,-60,-61,-62,-63,-64,71,71,71,71,71,71,71,]),'INTEGER_TYPE':([25,37,45,46,74,75,76,77,78,87,89,90,91,92,96,107,121,142,143,144,145,146,147,148,149,150,160,164,172,187,189,197,204,],[72,72,72,72,-13,72,72,72,72,72,126,72,72,72,72,72,72,72,-57,-58,-59,-60,-61,-62,-63,-64,72,72,72,72,72,72,72,]),'MINUS':([25,33,37,42,43,44,45,46,47,53,67,69,70,71,72,74,75,76,77,78,79,80,87,90,91,92,93,96,103,104,105,106,107,116,121,122,123,124,127,128,129,130,136,137,142,143,144,145,146,147,148,149,150,155,156,157,158,160,164,172,187,189,197,204,],[45,77,45,-82,-81,-75,45,45,-79,-78,-83,-84,-85,-86,-87,-13,45,45,45,45,77,-82,45,45,45,45,-88,45,-73,-81,-82,-74,45,-80,45,77,-9,-11,77,-32,-76,-77,-10,-12,45,-57,-58,-59,-60,-61,-62,-63,-64,77,-111,-110,-31,45,45,45,45,45,45,45,]),'RBRACKET':([27,29,30,31,38,39,74,75,102,164,172,175,176,177,185,189,190,192,198,199,200,204,206,207,208,209,],[74,-16,-17,-18,-42,-43,-13,-14,-15,-33,-46,-34,-35,-36,-47,-40,-23,-24,-41,-25,-26,-44,-45,-37,-38,-39,]),'PLUS':([33,42,43,44,47,53,67,69,70,71,72,79,80,93,103,104,105,106,116,122,123,124,127,128,129,130,136,137,155,156,157,158,],[76,-82,-81,-75,-79,-78,-83,-84,-85,-86,-87,76,-82,-88,-73,-81,-82,-74,-80,76,-9,-11,76,-32,-76,-77,-10,-12,76,-111,-110,-31,]),'EQUALS':([42,86,134,161,],[87,121,87,121,]),'DOT':([42,52,80,81,105,112,],[88,99,88,99,88,88,]),'TIMES':([42,43,44,47,53,67,69,70,71,72,80,93,103,104,105,106,116,123,124,129,130,136,137,156,157,],[-82,-81,91,-79,-78,-83,-84,-85,-86,-87,-82,-88,91,-81,-82,91,-80,-9,-11,-76,-77,-10,-12,-111,-110,]),'DIVIDE':([42,43,44,47,53,67,69,70,71,72,80,93,103,104,105,106,116,123,124,129,130,136,137,156,157,],[-82,-81,92,-79,-78,-83,-84,-85,-86,-87,-82,-88,92,-81,-82,92,-80,-9,-11,-76,-77,-10,-12,-111,-110,]),'LSQBRACKET':([42,50,52,54,55,56,57,58,59,60,61,62,63,64,80,85,105,112,174,],[89,98,100,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,89,100,89,89,187,]),'RPAREN':([43,44,47,53,67,69,70,71,72,79,80,90,93,103,104,105,106,108,109,110,111,112,113,114,115,116,122,123,124,127,128,129,130,131,136,137,140,155,156,157,158,163,165,167,168,169,179,181,183,184,191,195,203,],[-81,-75,-79,-78,-83,-84,-85,-86,-87,116,-82,128,-88,-73,-81,-82,-74,141,-49,-50,-51,-52,-53,-54,-55,-80,-71,-9,-11,158,-32,-76,-77,159,-10,-12,163,-70,-111,-110,-31,-56,-48,180,-89,182,-92,-90,193,194,-91,201,205,]),'GREATER_THAN':([50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,93,108,109,110,111,112,113,114,115,123,124,131,135,136,137,138,139,140,156,157,163,165,173,202,203,],[-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-65,-66,-84,-85,-86,-87,-88,146,-49,-50,-51,-52,-53,-54,-55,-9,-11,146,-68,-10,-12,-69,162,146,-111,-110,-56,-48,146,-67,146,]),'LESS_THAN':([68,69,70,71,72,93,108,109,110,111,112,113,114,115,123,124,131,136,137,140,156,157,163,165,173,203,],[101,-84,-85,-86,-87,-88,147,-49,-50,-51,-52,-53,-54,-55,-9,-11,147,-10,-12,147,-111,-110,-56,-48,147,147,]),'OR':([69,70,71,72,93,108,109,110,111,112,113,114,115,123,124,131,136,137,140,156,157,163,165,173,203,],[-84,-85,-86,-87,-88,143,-49,-50,-51,-52,-53,-54,-55,-9,-11,143,-10,-12,143,-111,-110,-56,-48,143,143,]),'AND':([69,70,71,72,93,108,109,110,111,112,113,114,115,123,124,131,136,137,140,156,157,163,165,173,203,],[-84,-85,-86,-87,-88,144,-49,-50,-51,-52,-53,-54,-55,-9,-11,144,-10,-12,144,-111,-110,-56,-48,144,144,]),'NOT':([69,70,71,72,93,108,109,110,111,112,113,114,115,123,124,131,136,137,140,156,157,163,165,173,203,],[-84,-85,-86,-87,-88,145,-49,-50,-51,-52,-53,-54,-55,-9,-11,145,-10,-12,145,-111,-110,-56,-48,145,145,]),'GREATER_EQUALS_THAN':([69,70,71,72,93,108,109,110,111,112,113,114,115,123,124,131,136,137,140,156,157,163,165,173,203,],[-84,-85,-86,-87,-88,148,-49,-50,-51,-52,-53,-54,-55,-9,-11,148,-10,-12,148,-111,-110,-56,-48,148,148,]),'LESS_EQUALS_THAN':([69,70,71,72,93,108,109,110,111,112,113,114,115,123,124,131,136,137,140,156,157,163,165,173,203,],[-84,-85,-86,-87,-88,149,-49,-50,-51,-52,-53,-54,-55,-9,-11,149,-10,-12,149,-111,-110,-56,-48,149,149,]),'EQUALITY':([69,70,71,72,93,108,109,110,111,112,113,114,115,123,124,131,136,137,140,156,157,163,165,173,203,],[-84,-85,-86,-87,-88,150,-49,-50,-51,-52,-53,-54,-55,-9,-11,150,-10,-12,150,-111,-110,-56,-48,150,150,]),'RSQBRACKET':([69,70,71,72,93,98,100,125,126,196,],[-84,-85,-86,-87,-88,135,138,156,157,202,]),'ELSE':([74,164,207,],[-13,178,178,]),'TRUE':([78,96,107,142,143,144,145,146,147,148,149,150,160,197,],[110,110,110,110,-57,-58,-59,-60,-61,-62,-63,-64,110,110,]),'FALSE':([78,96,107,142,143,144,145,146,147,148,149,150,160,197,],[111,111,111,111,-57,-58,-59,-60,-61,-62,-63,-64,111,111,]),'COMMA':([168,179,],[181,-92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'usings':([0,4,],[2,14,]),'namespace':([0,2,],[3,7,]),'using':([0,4,],[4,4,]),'class':([3,7,],[8,17,]),'modifier':([3,7,25,75,164,172,189,204,],[9,9,40,40,40,40,40,40,]),'block':([22,26,141,159,178,180,182,193,194,201,205,],[24,73,164,172,189,190,192,199,200,204,207,]),'body':([25,75,164,172,189,204,],[27,102,175,185,198,206,]),'lines':([25,75,164,172,189,204,],[28,28,28,28,28,28,]),'if':([25,75,164,172,189,204,],[29,29,29,29,29,29,]),'loop':([25,75,164,172,189,204,],[30,30,30,30,30,30,]),'function':([25,75,164,172,189,204,],[31,31,31,31,31,31,]),'assignment':([25,75,97,164,172,186,189,204,],[32,32,132,32,32,195,32,32,]),'expression':([25,37,75,87,90,121,164,172,189,204,],[33,79,33,122,127,155,33,33,33,33,]),'declaration':([25,75,151,152,164,170,171,172,181,189,204,],[34,34,168,168,34,168,168,34,168,34,34,]),'return':([25,75,164,172,189,204,],[35,35,35,35,35,35,]),'while_loop':([25,75,164,172,189,204,],[38,38,38,38,38,38,]),'loop_for':([25,75,164,172,189,204,],[39,39,39,39,39,39,]),'data_type':([25,40,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[41,82,41,119,133,139,166,166,41,166,166,41,166,133,41,41,]),'object_access':([25,37,75,76,77,78,87,90,91,92,96,107,121,142,160,164,172,189,197,204,],[43,43,43,104,104,115,43,43,104,104,115,115,43,115,115,43,43,43,115,43,]),'term':([25,37,75,76,77,87,90,121,164,172,189,204,],[44,44,44,103,106,44,44,44,44,44,44,44,]),'type':([25,37,45,46,75,76,77,78,87,90,91,92,96,107,121,142,160,164,172,187,189,197,204,],[47,47,93,95,47,47,47,114,47,47,47,47,114,114,47,114,114,47,47,196,47,114,47,]),'primitive':([25,40,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'data_structure':([25,40,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'factor':([25,37,75,76,77,87,90,91,92,121,164,172,189,204,],[53,53,53,53,53,53,53,129,130,53,53,53,53,53,]),'data_structure_list':([25,40,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'data_structure_array':([25,40,75,84,97,101,151,152,164,170,171,172,181,186,189,204,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'indexing':([25,37,75,76,77,78,87,90,91,92,96,107,121,142,160,164,172,189,197,204,],[67,67,67,67,67,113,67,67,67,67,113,113,67,113,113,67,67,67,113,67,]),'logical_expression':([78,96,107,160,197,],[108,131,140,173,203,]),'logical_factor':([78,96,107,142,160,197,],[109,109,109,165,109,109,]),'logical_operator':([108,131,140,173,203,],[142,142,142,142,142,]),'declarations':([151,152,170,171,181,],[167,169,183,184,191,]),'elseif':([164,207,],[176,208,]),'else':([164,207,],[177,209,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> usings namespace class','program',3,'p_program','PLY_yacc.py',36),
  ('program -> namespace class','program',2,'p_program','PLY_yacc.py',37),
  ('usings -> using usings','usings',2,'p_usings','PLY_yacc.py',41),
  ('usings -> using','usings',1,'p_usings','PLY_yacc.py',42),
  ('using -> USING CLASSOBJECT SEMICOLON','using',3,'p_using','PLY_yacc.py',46),
  ('namespace -> NAMESPACE CLASSOBJECT SEMICOLON','namespace',3,'p_namespace','PLY_yacc.py',50),
  ('class -> modifier CLASS CLASSOBJECT block','class',4,'p_class','PLY_yacc.py',53),
  ('class -> modifier STATIC CLASS CLASSOBJECT block','class',5,'p_class','PLY_yacc.py',54),
  ('object_access -> ID DOT ID','object_access',3,'p_object_access','PLY_yacc.py',58),
  ('object_access -> CLASSOBJECT DOT CLASSOBJECT','object_access',3,'p_object_access','PLY_yacc.py',59),
  ('object_access -> ID DOT CLASSOBJECT','object_access',3,'p_object_access','PLY_yacc.py',60),
  ('object_access -> CLASSOBJECT DOT ID','object_access',3,'p_object_access','PLY_yacc.py',61),
  ('block -> LBRACKET body RBRACKET','block',3,'p_block','PLY_yacc.py',64),
  ('body -> lines SEMICOLON','body',2,'p_body','PLY_yacc.py',69),
  ('body -> lines SEMICOLON body','body',3,'p_body','PLY_yacc.py',70),
  ('body -> if','body',1,'p_body','PLY_yacc.py',71),
  ('body -> loop','body',1,'p_body','PLY_yacc.py',72),
  ('body -> function','body',1,'p_body','PLY_yacc.py',73),
  ('lines -> assignment','lines',1,'p_lines','PLY_yacc.py',77),
  ('lines -> expression','lines',1,'p_lines','PLY_yacc.py',78),
  ('lines -> declaration','lines',1,'p_lines','PLY_yacc.py',79),
  ('lines -> return','lines',1,'p_lines','PLY_yacc.py',80),
  ('function -> modifier data_type ID LPAREN declarations RPAREN block','function',7,'p_funtion','PLY_yacc.py',84),
  ('function -> modifier VOID ID LPAREN declarations RPAREN block','function',7,'p_funtion','PLY_yacc.py',85),
  ('function -> modifier STATIC data_type ID LPAREN declarations RPAREN block','function',8,'p_funtion','PLY_yacc.py',86),
  ('function -> modifier STATIC VOID ID LPAREN declarations RPAREN block','function',8,'p_funtion','PLY_yacc.py',87),
  ('return -> RETURN ID','return',2,'p_return','PLY_yacc.py',90),
  ('return -> RETURN type','return',2,'p_return','PLY_yacc.py',91),
  ('lambda_function -> LPAREN ID RPAREN ARROW expression','lambda_function',5,'p_lambda_function','PLY_yacc.py',95),
  ('lambda_function -> LPAREN ID RPAREN ARROW block','lambda_function',5,'p_lambda_function','PLY_yacc.py',96),
  ('expression -> object_access LPAREN expression RPAREN','expression',4,'p_console_writeline','PLY_yacc.py',99),
  ('expression -> object_access LPAREN RPAREN','expression',3,'p_console_readline','PLY_yacc.py',106),
  ('if -> IF LPAREN logical_expression RPAREN block','if',5,'p_if','PLY_yacc.py',116),
  ('if -> IF LPAREN logical_expression RPAREN block body','if',6,'p_if','PLY_yacc.py',117),
  ('if -> IF LPAREN logical_expression RPAREN block elseif','if',6,'p_if','PLY_yacc.py',118),
  ('if -> IF LPAREN logical_expression RPAREN block else','if',6,'p_if','PLY_yacc.py',119),
  ('elseif -> ELSE IF LPAREN logical_expression RPAREN block','elseif',6,'p_elseif','PLY_yacc.py',122),
  ('elseif -> ELSE IF LPAREN logical_expression RPAREN block elseif','elseif',7,'p_elseif','PLY_yacc.py',123),
  ('elseif -> ELSE IF LPAREN logical_expression RPAREN block else','elseif',7,'p_elseif','PLY_yacc.py',124),
  ('else -> ELSE block','else',2,'p_else','PLY_yacc.py',128),
  ('else -> ELSE block body','else',3,'p_else','PLY_yacc.py',129),
  ('loop -> while_loop','loop',1,'p_loop','PLY_yacc.py',133),
  ('loop -> loop_for','loop',1,'p_loop','PLY_yacc.py',134),
  ('loop_for -> FOR LPAREN assignment SEMICOLON logical_expression SEMICOLON assignment RPAREN block','loop_for',9,'p_loop_for','PLY_yacc.py',139),
  ('loop_for -> FOR LPAREN assignment SEMICOLON logical_expression SEMICOLON assignment RPAREN block body','loop_for',10,'p_loop_for','PLY_yacc.py',140),
  ('while_loop -> WHILE LPAREN logical_expression RPAREN block','while_loop',5,'p_while_loop','PLY_yacc.py',145),
  ('while_loop -> WHILE LPAREN logical_expression RPAREN block body','while_loop',6,'p_while_loop','PLY_yacc.py',146),
  ('logical_expression -> logical_expression logical_operator logical_factor','logical_expression',3,'p_logical_expression','PLY_yacc.py',149),
  ('logical_expression -> logical_factor','logical_expression',1,'p_logical_expression','PLY_yacc.py',150),
  ('logical_factor -> TRUE','logical_factor',1,'p_logical_factor','PLY_yacc.py',153),
  ('logical_factor -> FALSE','logical_factor',1,'p_logical_factor','PLY_yacc.py',154),
  ('logical_factor -> ID','logical_factor',1,'p_logical_factor','PLY_yacc.py',155),
  ('logical_factor -> indexing','logical_factor',1,'p_logical_factor','PLY_yacc.py',156),
  ('logical_factor -> type','logical_factor',1,'p_logical_factor','PLY_yacc.py',157),
  ('logical_factor -> object_access','logical_factor',1,'p_logical_factor','PLY_yacc.py',158),
  ('logical_factor -> LPAREN logical_expression RPAREN','logical_factor',3,'p_logical_factor','PLY_yacc.py',159),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','PLY_yacc.py',162),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','PLY_yacc.py',163),
  ('logical_operator -> NOT','logical_operator',1,'p_logical_operator','PLY_yacc.py',164),
  ('logical_operator -> GREATER_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',165),
  ('logical_operator -> LESS_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',166),
  ('logical_operator -> GREATER_EQUALS_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',167),
  ('logical_operator -> LESS_EQUALS_THAN','logical_operator',1,'p_logical_operator','PLY_yacc.py',168),
  ('logical_operator -> EQUALITY','logical_operator',1,'p_logical_operator','PLY_yacc.py',169),
  ('data_structure -> data_structure_list','data_structure',1,'p_data_structure','PLY_yacc.py',174),
  ('data_structure -> data_structure_array','data_structure',1,'p_data_structure','PLY_yacc.py',175),
  ('data_structure_list -> LIST LESS_THAN data_type GREATER_THAN ID LSQBRACKET type RSQBRACKET','data_structure_list',8,'p_data_structure_list','PLY_yacc.py',178),
  ('data_structure_array -> primitive LSQBRACKET RSQBRACKET','data_structure_array',3,'p_data_structure_array','PLY_yacc.py',183),
  ('data_structure_array -> CLASSOBJECT LSQBRACKET RSQBRACKET','data_structure_array',3,'p_data_structure_array','PLY_yacc.py',184),
  ('assignment -> data_type ID EQUALS expression','assignment',4,'p_assignment','PLY_yacc.py',187),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment_untyped','PLY_yacc.py',197),
  ('assignment_class -> CLASSOBJECT ID','assignment_class',2,'p_assignment_class','PLY_yacc.py',200),
  ('expression -> expression PLUS term','expression',3,'p_expression','PLY_yacc.py',203),
  ('expression -> expression MINUS term','expression',3,'p_expression','PLY_yacc.py',204),
  ('expression -> term','expression',1,'p_expression','PLY_yacc.py',205),
  ('term -> term TIMES factor','term',3,'p_term','PLY_yacc.py',211),
  ('term -> term DIVIDE factor','term',3,'p_term','PLY_yacc.py',212),
  ('term -> factor','term',1,'p_term','PLY_yacc.py',213),
  ('factor -> type','factor',1,'p_factor','PLY_yacc.py',219),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','PLY_yacc.py',220),
  ('factor -> object_access','factor',1,'p_factor','PLY_yacc.py',221),
  ('factor -> ID','factor',1,'p_factor','PLY_yacc.py',222),
  ('factor -> indexing','factor',1,'p_factor','PLY_yacc.py',223),
  ('type -> FLOAT_TYPE','type',1,'p_type','PLY_yacc.py',232),
  ('type -> DOUBLE_TYPE','type',1,'p_type','PLY_yacc.py',233),
  ('type -> DECIMAL_TYPE','type',1,'p_type','PLY_yacc.py',234),
  ('type -> INTEGER_TYPE','type',1,'p_type','PLY_yacc.py',235),
  ('type -> MINUS type','type',2,'p_type','PLY_yacc.py',236),
  ('declarations -> declaration','declarations',1,'p_declarations','PLY_yacc.py',250),
  ('declarations -> declaration COMMA','declarations',2,'p_declarations','PLY_yacc.py',251),
  ('declarations -> declaration COMMA declarations','declarations',3,'p_declarations','PLY_yacc.py',252),
  ('declaration -> data_type ID','declaration',2,'p_declaration','PLY_yacc.py',255),
  ('modifier -> PUBLIC','modifier',1,'p_modifier','PLY_yacc.py',258),
  ('modifier -> PRIVATE','modifier',1,'p_modifier','PLY_yacc.py',259),
  ('modifier -> PROTECTED','modifier',1,'p_modifier','PLY_yacc.py',260),
  ('modifier -> INTERNAL','modifier',1,'p_modifier','PLY_yacc.py',261),
  ('data_type -> primitive','data_type',1,'p_data_type','PLY_yacc.py',264),
  ('data_type -> data_structure','data_type',1,'p_data_type','PLY_yacc.py',265),
  ('primitive -> INT','primitive',1,'p_primitive','PLY_yacc.py',268),
  ('primitive -> FLOAT','primitive',1,'p_primitive','PLY_yacc.py',269),
  ('primitive -> BOOL','primitive',1,'p_primitive','PLY_yacc.py',270),
  ('primitive -> BYTE','primitive',1,'p_primitive','PLY_yacc.py',271),
  ('primitive -> CHAR','primitive',1,'p_primitive','PLY_yacc.py',272),
  ('primitive -> SBYTE','primitive',1,'p_primitive','PLY_yacc.py',273),
  ('primitive -> DECIMAL','primitive',1,'p_primitive','PLY_yacc.py',274),
  ('primitive -> DOUBLE','primitive',1,'p_primitive','PLY_yacc.py',275),
  ('primitive -> LONG','primitive',1,'p_primitive','PLY_yacc.py',276),
  ('primitive -> SHORT','primitive',1,'p_primitive','PLY_yacc.py',277),
  ('primitive -> UINT','primitive',1,'p_primitive','PLY_yacc.py',278),
  ('indexing -> ID LSQBRACKET INTEGER_TYPE RSQBRACKET','indexing',4,'p_indexing','PLY_yacc.py',282),
  ('indexing -> ID LSQBRACKET ID RSQBRACKET','indexing',4,'p_indexing','PLY_yacc.py',283),
]
